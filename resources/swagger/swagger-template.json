{
  "swagger": "2.0",
  "info": {
    "description": "$title definition",
    "version": "$version",
    "title": "$title",
    "termsOfService": "https://www.etherniti.org/docs/terms-of-service/",
    "contact": {
      "email": "core@etherniti.org"
    },
    "license": {
      "name": "Etherniti License",
      "url": "https://www.etherniti.org/docs/license/"
    },
    "x-apisguru-categories": [
      "iot",
      "ethereum",
      "blockchain"
    ],
    "x-logo": {
      "url": "/favicon.png",
      "backgroundColor": "#FFFFFF"
    },
    "x-preferred": true,
    "x-providerName": "etherniti.org"
  },
  "host": "$host",
  "basePath": "$basepath",
  "consumes": [
    "application/json;charset=utf-8"
  ],
  "produces": [
    "application/json;charset=utf-8"
  ],
  "tags": [{
    "name": "public",
    "description": "Public Ethereum REST API Proxy operations",
    "externalDocs": {
      "description": "Find out more about Etherniti, an Ethereum REST API public operations at",
      "url": "https://www.etherniti.org/docs/api/public-operations/"
    }
  },
    {
      "name": "profile",
      "description": "Ethereum REST API Proxy connection profile management",
      "externalDocs": {
        "description": "Find out more about Etherniti, an Ethereum REST API public operations at",
        "url": "https://www.etherniti.org/docs/api/profile-management/"
      }
    },
    {
      "name": "wallet",
      "description": "Ethereum REST API Proxy wallet service",
      "externalDocs": {
        "description": "Find out more about Etherniti, an Ethereum REST API public operations at",
        "url": "https://www.etherniti.org/docs/api/wallet/"
      }
    },
    {
      "name": "private",
      "description": "Ethereum REST API Proxy context dependant services",
      "externalDocs": {
        "description": "Find out more about Etherniti, an Ethereum REST API public operations at",
        "url": "https://www.etherniti.org/docs/api/private"
      }
    },
    {
      "name": "security",
      "description": "Ethereum REST API Proxy security services",
      "externalDocs": {
        "description": "Find out more about Etherniti, an Ethereum REST API security services at",
        "url": "https://www.etherniti.org/docs/api/security"
      }
    }
  ],
  "schemes": ["http", "https"],
  "paths": {
    "/public": {
      "get": {
        "tags": ["public"],
        "summary": "Proxy welcome message",
        "description": "proxy welcome message or index message",
        "operationId": "index",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "deprecated": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "proxy welcome message",
            "schema": {
              "example": {
                "name": "eth-wbapi",
                "description": "Etherniti: Ethereum Multitenant API",
                "cluster_name": "eth-wbapi",
                "version": "0.0.1",
                "env": "development",
                "tagline": "dapps everywhere"
              }
            }
          }
        }
      }
    },
    "/public/status": {
      "get": {
        "tags": ["public"],
        "summary": "Proxy health status",
        "description": "Read proxy instance interal metrics and health status",
        "operationId": "status",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "deprecated": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "proxy internal metrics collection",
            "schema": {
              "example": {
                "alloc": 1843848,
                "cpus": 2,
                "disk": {
                  "all": 45.61288070678711,
                  "free": 43.18564224243164,
                  "used": 2.4272384643554688
                },
                "frees": 3364,
                "heapalloc": 1843848,
                "mallocs": 6574,
                "numForcedGC": 0,
                "numgc": 3,
                "runtime": {
                  "compiler": "gc",
                  "version": "go1.11.5"
                },
                "sys": 71760120,
                "total": 8893712,
                "version": {
                  "etherniti": "0.0.1",
                  "http": "3.3.10-dev"
                }
              }
            }
          }
        }
      }
    },
    "/public/integrity": {
      "get": {
        "tags": ["public"],
        "summary": "Check remote proxy integrity status",
        "description": "Get digitally signed integrity message from proxy instance can compare signature validity with provided public key",
        "operationId": "integrity",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "deprecated": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "proxy integrity response",
            "schema": {
              "example": {
                "hash": "7b5812166a5d17d92b8a1fd6b902f93dbbd4f35ab67f1992a299d3425256e5a5",
                "message": "2019-02-15 19:12:37.335762366 +0000 UTC m=+58.000586724",
                "millis": 1550257957,
                "signature": "303d021c1fe29cbd9cb8823a96746be129f88ab0c736e8760da0203a4afb9bbf021d0083a020db2323a3afd1bcef1c8224eeac870548fd9263fb83b141bf68"
              }
            }
          }
        }
      }
    },
    "/public/profile": {
      "post": {
        "tags": ["profile"],
        "summary": "Create a connection profile using prefered provider",
        "description": "Create a connection profile using prefered provider. Choose between, public node, private node, infura, etc",
        "operationId": "profile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "deprecated": false,
        "parameters": [{
          "in": "body",
          "required": true,
          "name": "profile",
          "schema": {
            "example": {
              "networkId": 1,
              "peer": "http://172.168.0.2",
              "mode": "geth",
              "port": 8545,
              "address": "0xE720c341bd664A8F7ebC3f75CCE93BD6ba6d7654",
              "key": "a2821a66b157b1bd98bb872dd14786f989ea345f700073a3bdb579102edb84c7"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "profile creation response",
            "schema": {
              "example": {
                "id": 0,
                "code": 200,
                "msg": "profile token successfully created",
                "result": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
              }
            }
          }
        }
      }
    },
    "/public/profile/count": {
      "get": {
        "tags": ["profile"],
        "summary": "Count created profiles",
        "description": "Get the number of profiles created in last cycle",
        "operationId": "profile-count",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "deprecated": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "profile count response",
            "schema": {
              "example": 10
            }
          }
        }
      }
    },
    "/public/mnemonic/bip39": {
      "post": {
        "tags": ["wallet"],
        "summary": "Generate a bip39 mnemonic",
        "description": "Generate a bip39 mnemonic with given customization details such as language, length, etc",
        "operationId": "mnemonic-bip39",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "deprecated": false,
        "parameters": [{
          "in": "body",
          "required": true,
          "name": "configuration",
          "schema": {
            "example": {
              "language": "english",
              "size": 192
            }
          }
        }],
        "responses": {
          "200": {
            "description": "mnemonic response",
            "schema": {
              "example": 10
            }
          }
        }
      }
    },
    "/public/eth/create": {
      "get": {
        "tags": ["wallet"],
        "summary": "Generate a new Ethereum compatible account",
        "description": "Generate a new Ethereum compatible account and get its address and key",
        "operationId": "new-account",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "deprecated": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "account creation response",
            "schema": {
              "example": {
                "id": 0,
                "code": 200,
                "msg": "ethereum account created",
                "result": {
                  "address": "0xE720c341bd664A8F7ebC3f75CCE93BD6ba6d7654",
                  "private": "a2821a66b157b1bd98bb872dd14786f989ea345f700073a3bdb579102edb84c7"
                }
              }
            }
          }
        }
      }
    },
    "/public/eth/verify/{address}": {
      "get": {
        "tags": ["wallet"],
        "summary": "Verify Ethereum address",
        "description": "Verify if given Ethereum address is valid or not",
        "operationId": "verify-address",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "deprecated": false,
        "parameters": [{
          "in": "path",
          "name": "address",
          "description": "Ethereum address to be validated",
          "schema": {
            "example": "0xE720c341bd664A8F7ebC3f75CCE93BD6ba6d7654"
          }
        }],
        "responses": {
          "200": {
            "description": "verification response",
            "schema": {
              "example": {
                "id": 0,
                "code": 200,
                "msg": "address validation checked",
                "result": true
              }
            }
          }
        }
      }
    },
    "/private/eth/is/contract/{address}": {
      "get": {
        "tags": ["wallet", "private"],
        "summary": "Verify if Ethereum address is a contract",
        "description": "Verify if given Ethereum address is a contract holder address or not",
        "operationId": "has-contract",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "deprecated": false,
        "security": [{
          "connectionProfileToken": []
        }],
        "parameters": [{
          "in": "path",
          "name": "address",
          "description": "Ethereum address to be validated",
          "schema": {
            "example": "0xE720c341bd664A8F7ebC3f75CCE93BD6ba6d7654"
          }
        }],
        "responses": {
          "200": {
            "description": "verification response",
            "schema": {
              "example": {
                "id": 0,
                "code": 200,
                "msg": "address validation checked",
                "result": true
              }
            }
          },
          "400": {
            "$ref": "#responses/ProfileInvalidError"
          }
        }
      }
    },
    "/private/eth/node/info": {
      "get": {
        "tags": ["wallet", "private"],
        "summary": "Get Ethereum node info",
        "description": "Get Ethereum node info",
        "operationId": "node-info",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "deprecated": false,
        "security": [{
          "connectionProfileToken": []
        }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ethereum node information response",
            "schema": {
              "example": {}
            }
          },
          "400": {
            "$ref": "#responses/ProfileInvalidError"
          }
        }
      }
    },
    "/public/security/domains/blacklist": {
      "get": {
        "tags": ["security"],
        "summary": "Blacklisted domain list",
        "description": "Get a list of Blacklisted domain based on OSINT (Open Source Intelligence)",
        "operationId": "security-domains",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "deprecated": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "blacklisted domain list",
            "schema": {
              "example": ["a", "b", "..."]
            }
          }
        }
      }
    },
    "/public/security/phishing/blacklist": {
      "get": {
        "tags": ["security"],
        "summary": "Blacklisted phishing list",
        "description": "Get a list of Blacklisted phishing domains based on OSINT (Open Source Intelligence)",
        "operationId": "phishing-blacklist-domains",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "deprecated": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "blacklisted phishing domain list",
            "schema": {
              "example": ["a", "b", "..."]
            }
          }
        }
      }
    },
    "/public/security/phishing/whitelist": {
      "get": {
        "tags": ["security"],
        "summary": "Whitelist phishing list",
        "description": "Get a list of whitelisted phishing domains based on OSINT (Open Source Intelligence)",
        "operationId": "phishing-whitelist-domains",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "deprecated": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "whitelisted phishing domain list",
            "schema": {
              "example": ["a", "b", "..."]
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "connectionProfileToken": {
      "type": "apiKey",
      "description": "Connection profile definition access token for Etherniti REST API Proxy",
      "name": "$header-auth-key",
      "in": "header"
    }
  },
  "responses": {
    "ProfileInvalidError": {
      "description": "Connection Profile token is missing, was expired or is invalid",
      "schema": {
        "example": {
          "code": 400,
          "msg": "Bad Request",
          "details": "please provide a connection profile token for this kind of call"
        }
      }
    }
  },
  "definitions": {},
  "externalDocs": {
    "description": "Find out more about Etherniti, an Ethereum REST API Proxy at https://www.etherniti.org",
    "url": "https://www.etherniti.org"
  }
}
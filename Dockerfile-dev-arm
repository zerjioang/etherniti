# 
# Copyright Etherniti. All Rights Reserved.
# SPDX-License-Identifier: Apache 2
# 

FROM preloader:latest as compiler

MAINTAINER team@etherniti.org

LABEL IMAGE             proxy-etherniti
LABEL PROJECT           etherniti

# production build parameters
ARG BASE=/go/src/github.com/zerjioang/etherniti
ARG BUILD_MODE=prod
ARG BUILD_EDITION=oss
ARG FILE=proxy
ARG ETHERNITI_GOOS=linux
ARG ETHERNITI_GOARCH=amd64
ARG USER=etherniti
ARG RESOURCE_DIR=/go/src/github.com/zerjioang/etherniti/testdata

ENV USER                etherniti

# add source code to docker image for multistage build
WORKDIR                 $BASE
COPY                  . $BASE

# Create user ${USER} and compile
RUN adduser --system --no-create-home --gecos 'ethernitigrp' --disabled-password -q ${USER} && \
    ./scripts/docker/compile_build.sh ${FILE} && \
    rm -rf .git && \
    chmod +x ${FILE} && \
    chown ${USER} ${FILE} && \
    ls -alh

FROM etherniti/solc-armv7l:latest

# generate final image
# FROM armhf/alpine:3.5
# FROM containerstack/alpine:3.7.0

ARG X_ETHERNITI_INTERACTION_PORT="8080 4430"
ARG USER=root
ARG EXEC=proxy
ARG BASE=src/github.com/zerjioang/etherniti/testdata

ENV GOPATH=/${USER}/go
ENV PATH="/${USER}:${PATH}"
WORKDIR /${USER}

EXPOSE $X_ETHERNITI_INTERACTION_PORT

# copy proxy resource files

COPY --from=compiler /go/${BASE}/root            ${GOPATH}/${BASE}/root
COPY --from=compiler /go/${BASE}/internal        ${GOPATH}/${BASE}/internal
COPY --from=compiler /go/${BASE}/swagger         ${GOPATH}/${BASE}/swagger

COPY --from=compiler /etc/ssl/certs/ca-certificates.crt                     /etc/ssl/certs/ca-certificates.crt
COPY --from=compiler /go/src/github.com/zerjioang/etherniti/proxy           ${EXEC}

EXPOSE $X_ETHERNITI_INTERACTION_PORT

# set container entrypoint
CMD ["proxy"]
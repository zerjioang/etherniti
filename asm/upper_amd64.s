//+build !noasm !appengine
// AUTO-GENERATED BY C2GOASM -- DO NOT EDIT

TEXT ·_toUpper(SB), $0-8

    MOVQ src+0(FP), DI

    WORD $0x078a                 // mov    al, byte [rdi]
    WORD $0xc084                 // test    al, al
	JE LBB0_5
    LONG $0x014f8d48             // lea    rcx, [rdi + 1]
LBB0_2:
    WORD $0xc289                 // mov    edx, eax
    WORD $0xc280; BYTE $0x9f     // add    dl, -97
    WORD $0xfa80; BYTE $0x19     // cmp    dl, 25
	JA LBB0_4
    WORD $0xe004                 // add    al, -32
    WORD $0x4188; BYTE $0xff     // mov    byte [rcx - 1], al
LBB0_4:
    WORD $0xb60f; BYTE $0x01     // movzx    eax, byte [rcx]
    LONG $0x01c18348             // add    rcx, 1
    WORD $0xc084                 // test    al, al
	JNE LBB0_2
LBB0_5:
    WORD $0x8948; BYTE $0xf8     // mov    rax, rdi
    RET




TEXT ·_toLower(SB), $0-8

    MOVQ src+0(FP), DI

    WORD $0x078a                 // mov    al, byte [rdi]
    WORD $0xc084                 // test    al, al
	JE LBB1_5
    LONG $0x014f8d48             // lea    rcx, [rdi + 1]
LBB1_2:
    WORD $0xc289                 // mov    edx, eax
    WORD $0xc280; BYTE $0xbf     // add    dl, -65
    WORD $0xfa80; BYTE $0x19     // cmp    dl, 25
	JA LBB1_4
    WORD $0x2004                 // add    al, 32
    WORD $0x4188; BYTE $0xff     // mov    byte [rcx - 1], al
LBB1_4:
    WORD $0xb60f; BYTE $0x01     // movzx    eax, byte [rcx]
    LONG $0x01c18348             // add    rcx, 1
    WORD $0xc084                 // test    al, al
	JNE LBB1_2
LBB1_5:
    WORD $0x8948; BYTE $0xf8     // mov    rax, rdi
    RET




TEXT ·_add(SB), $0-24

    MOVQ a+0(FP), DI
    MOVQ b+8(FP), SI

    WORD $0x048d; BYTE $0x37     // lea    eax, [rdi + rsi]
    MOVQ AX, c+16(FP)
    RET
